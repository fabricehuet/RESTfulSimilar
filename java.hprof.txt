JAVA PROFILE 1.0.1, created Thu Sep  6 18:20:46 2012

Copyright (c) 2003, 2005, Oracle and/or its affiliates. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions
are met:

  - Redistributions of source code must retain the above copyright
    notice, this list of conditions and the following disclaimer.

  - Redistributions in binary form must reproduce the above copyright
    notice, this list of conditions and the following disclaimer in the
    documentation and/or other materials provided with the distribution.

  - Neither the name of Oracle nor the names of its
    contributors may be used to endorse or promote products derived
    from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS
IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.


Header for -agentlib:hprof (or -Xrunhprof) ASCII Output (JDK 5.0 JVMTI based)

WARNING!  This file format is under development, and is subject to
change without notice.

This file contains the following types of records:

THREAD START
THREAD END      mark the lifetime of Java threads

TRACE           represents a Java stack trace.  Each trace consists
                of a series of stack frames.  Other records refer to
                TRACEs to identify (1) where object allocations have
                taken place, (2) the frames in which GC roots were
                found, and (3) frequently executed methods.

HEAP DUMP       is a complete snapshot of all live objects in the Java
                heap.  Following distinctions are made:

                ROOT    root set as determined by GC
                CLS     classes 
                OBJ     instances
                ARR     arrays

SITES           is a sorted list of allocation sites.  This identifies
                the most heavily allocated object types, and the TRACE
                at which those allocations occurred.

CPU SAMPLES     is a statistical profile of program execution.  The VM
                periodically samples all running threads, and assigns
                a quantum to active TRACEs in those threads.  Entries
                in this record are TRACEs ranked by the percentage of
                total quanta they consumed; top-ranked TRACEs are
                typically hot spots in the program.

CPU TIME        is a profile of program execution obtained by measuring
                the time spent in individual methods (excluding the time
                spent in callees), as well as by counting the number of
                times each method is called. Entries in this record are
                TRACEs ranked by the percentage of total CPU time. The
                "count" field indicates the number of times each TRACE 
                is invoked.

MONITOR TIME    is a profile of monitor contention obtained by measuring
                the time spent by a thread waiting to enter a monitor.
                Entries in this record are TRACEs ranked by the percentage
                of total monitor contention time and a brief description
                of the monitor.  The "count" field indicates the number of 
                times the monitor was contended at that TRACE.

MONITOR DUMP    is a complete snapshot of all the monitors and threads in 
                the System.

HEAP DUMP, SITES, CPU SAMPLES|TIME and MONITOR DUMP|TIME records are generated 
at program exit.  They can also be obtained during program execution by typing 
Ctrl-\ (on Solaris) or by typing Ctrl-Break (on Win32).

--------

THREAD START (obj=50000164, id = 200001, name="main", group="main")
THREAD START (obj=50000164, id = 200004, name="Generate Seed", group="main")
THREAD END (id = 200004)
THREAD START (obj=50000164, id = 200005, name="H2 File Lock Watchdog /home/fhuet/workspaces/rechercheefficaceimagessimilaires/surfjavacl/test.lock.db", group="main")
THREAD START (obj=50000164, id = 200006, name="H2 Log Writer TEST", group="main")
THREAD START (obj=50000164, id = 200007, name="Java2D Disposer", group="system")
THREAD START (obj=50000164, id = 200010, name="SIGINT handler", group="system")
THREAD START (obj=50000553, id = 200011, name="Thread-0", group="main")
THREAD START (obj=50000164, id = 200012, name="Thread-1", group="system")
THREAD END (id = 200012)
THREAD END (id = 200006)
THREAD END (id = 200005)
THREAD END (id = 200011)
THREAD END (id = 200010)
TRACE 300382:
	com.sun.imageio.plugins.jpeg.JPEGImageReader.readImage(JPEGImageReader.java:Unknown line)
	com.sun.imageio.plugins.jpeg.JPEGImageReader.readInternal(JPEGImageReader.java:1158)
	com.sun.imageio.plugins.jpeg.JPEGImageReader.read(JPEGImageReader.java:966)
	javax.imageio.ImageIO.read(ImageIO.java:1448)
TRACE 300213:
	java.io.FileDescriptor.sync(FileDescriptor.java:Unknown line)
	org.h2.store.fs.FileDisk.force(FilePathDisk.java:389)
	org.h2.store.FileStore.sync(FileStore.java:413)
	org.h2.store.PageStore.writeVariableHeader(PageStore.java:947)
TRACE 300387:
	sun.awt.image.SunWritableRaster.markDirty(SunWritableRaster.java:137)
	sun.awt.image.ByteInterleavedRaster.putByteData(ByteInterleavedRaster.java:831)
	sun.awt.image.ByteInterleavedRaster.setDataElements(ByteInterleavedRaster.java:675)
	sun.awt.image.ByteInterleavedRaster.setDataElements(ByteInterleavedRaster.java:648)
TRACE 300388:
	sun.awt.image.ByteInterleavedRaster.getByteData(ByteInterleavedRaster.java:453)
	sun.awt.image.ByteInterleavedRaster.getDataElements(ByteInterleavedRaster.java:364)
	sun.awt.image.ByteInterleavedRaster.setDataElements(ByteInterleavedRaster.java:646)
	sun.awt.image.ByteInterleavedRaster.setRect(ByteInterleavedRaster.java:1180)
TRACE 300057:
	java.lang.ClassLoader.defineClass1(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.defineClass(ClassLoader.java:791)
	java.security.SecureClassLoader.defineClass(SecureClassLoader.java:142)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:449)
TRACE 300515:
	java.io.FileInputStream.readBytes(FileInputStream.java:Unknown line)
	java.io.FileInputStream.read(FileInputStream.java:220)
	fr.thumbnailsdb.ThumbnailGenerator.generateMD5(ThumbnailGenerator.java:77)
	fr.thumbnailsdb.ThumbnailGenerator.generateImageDescriptor(ThumbnailGenerator.java:124)
TRACE 300516:
	sun.misc.Unsafe.getInt(Unsafe.java:Unknown line)
	sun.security.provider.ByteArrayAccess.b2iLittle64(ByteArrayAccess.java:136)
	sun.security.provider.MD5.implCompress(MD5.java:146)
	sun.security.provider.DigestBase.engineUpdate(DigestBase.java:139)
TRACE 300093:
	sun.misc.Unsafe.putOrderedObject(Unsafe.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap.setEntryAt(ConcurrentHashMap.java:258)
	java.util.concurrent.ConcurrentHashMap$Segment.put(ConcurrentHashMap.java:396)
	java.util.concurrent.ConcurrentHashMap.putIfAbsent(ConcurrentHashMap.java:1084)
TRACE 300372:
	java.awt.image.DataBufferByte.<init>(DataBufferByte.java:92)
	java.awt.image.ComponentSampleModel.createDataBuffer(ComponentSampleModel.java:415)
	java.awt.image.Raster.createWritableRaster(Raster.java:944)
	javax.imageio.ImageTypeSpecifier.createBufferedImage(ImageTypeSpecifier.java:1073)
TRACE 300385:
	java.lang.System.arraycopy(System.java:Unknown line)
	sun.awt.image.ByteInterleavedRaster.getByteData(ByteInterleavedRaster.java:466)
	sun.awt.image.ByteInterleavedRaster.getDataElements(ByteInterleavedRaster.java:364)
	sun.awt.image.ByteInterleavedRaster.setDataElements(ByteInterleavedRaster.java:646)
TRACE 300036:
	sun.misc.URLClassPath$3.run(URLClassPath.java:362)
	sun.misc.URLClassPath$3.run(URLClassPath.java:352)
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
	sun.misc.URLClassPath.getLoader(URLClassPath.java:351)
TRACE 300058:
	java.lang.ClassLoader.findBootstrapClass(ClassLoader.java:Unknown line)
	java.lang.ClassLoader.findBootstrapClassOrNull(ClassLoader.java:1061)
	java.lang.ClassLoader.loadClass(ClassLoader.java:412)
	java.lang.ClassLoader.loadClass(ClassLoader.java:410)
TRACE 300060:
	java.lang.String.charAt(String.java:697)
	sun.nio.cs.FastCharsetProvider.toLower(FastCharsetProvider.java:78)
	sun.nio.cs.FastCharsetProvider.lookup(FastCharsetProvider.java:99)
	sun.nio.cs.FastCharsetProvider.charsetForName(FastCharsetProvider.java:136)
TRACE 300083:
	java.lang.String.hashCode(String.java:1495)
	java.io.UnixFileSystem.hashCode(UnixFileSystem.java:309)
	java.io.File.hashCode(File.java:1985)
	java.util.HashMap.get(HashMap.java:317)
TRACE 300088:
	java.util.zip.ZipFile.read(ZipFile.java:Unknown line)
	java.util.zip.ZipFile.access$1400(ZipFile.java:56)
	java.util.zip.ZipFile$ZipFileInputStream.read(ZipFile.java:677)
	java.util.zip.ZipFile$ZipFileInflaterInputStream.fill(ZipFile.java:413)
TRACE 300089:
	java.util.Arrays.copyOf(Arrays.java:2271)
	sun.misc.Resource.getBytes(Resource.java:117)
	java.net.URLClassLoader.defineClass(URLClassLoader.java:444)
	java.net.URLClassLoader.access$100(URLClassLoader.java:71)
TRACE 300094:
	java.lang.Object.<init>(Object.java:37)
	java.io.InputStream.<init>(InputStream.java:45)
	java.io.FilterInputStream.<init>(FilterInputStream.java:61)
	java.util.zip.InflaterInputStream.<init>(InflaterInputStream.java:81)
TRACE 300095:
	org.h2.engine.Engine.openSession(Engine.java:56)
	org.h2.engine.Engine.openSession(Engine.java:159)
	org.h2.engine.Engine.createSessionAndValidate(Engine.java:138)
	org.h2.engine.Engine.createSession(Engine.java:121)
TRACE 300114:
	java.util.Properties$LineReader.readLine(Properties.java:433)
	java.util.Properties.load0(Properties.java:353)
	java.util.Properties.load(Properties.java:341)
	java.security.Security.initialize(Security.java:88)
TRACE 300129:
	java.security.Provider$Service.getImplClass(Provider.java:1273)
	java.security.Provider$Service.newInstance(Provider.java:1237)
	sun.security.jca.GetInstance.getInstance(GetInstance.java:236)
	sun.security.jca.GetInstance.getInstance(GetInstance.java:164)
TRACE 300151:
	sun.nio.fs.UnixFileSystem.<init>(UnixFileSystem.java:67)
	sun.nio.fs.LinuxFileSystem.<init>(LinuxFileSystem.java:39)
	sun.nio.fs.LinuxFileSystemProvider.newFileSystem(LinuxFileSystemProvider.java:43)
	sun.nio.fs.LinuxFileSystemProvider.newFileSystem(LinuxFileSystemProvider.java:36)
TRACE 300190:
	sun.util.resources.TimeZoneNames.getContents(TimeZoneNames.java:201)
	sun.util.resources.OpenListResourceBundle.loadLookup(OpenListResourceBundle.java:125)
	sun.util.resources.OpenListResourceBundle.loadLookupTablesIfNecessary(OpenListResourceBundle.java:113)
	sun.util.resources.OpenListResourceBundle.handleGetObject(OpenListResourceBundle.java:74)
TRACE 300196:
	org.h2.engine.Database.getPageStore(Database.java:2110)
	org.h2.engine.Database.open(Database.java:577)
	org.h2.engine.Database.openDatabase(Database.java:222)
	org.h2.engine.Database.<init>(Database.java:217)
TRACE 300200:
	org.h2.store.PageStore.openExisting(PageStore.java:340)
	org.h2.store.PageStore.open(PageStore.java:285)
	org.h2.engine.Database.getPageStore(Database.java:2118)
	org.h2.engine.Database.open(Database.java:577)
TRACE 300201:
	org.h2.table.Column.<init>(Column.java:96)
	org.h2.table.Column.<init>(Column.java:89)
	org.h2.store.PageStore.openMetaIndex(PageStore.java:1551)
	org.h2.store.PageStore.recover(PageStore.java:1363)
TRACE 300202:
	org.h2.value.ValueInt.<clinit>(ValueInt.java:41)
	org.h2.store.Data.readValue(Data.java:844)
	org.h2.index.PageDataLeaf.readRow(PageDataLeaf.java:600)
	org.h2.index.PageDataLeaf.getRowAt(PageDataLeaf.java:330)
TRACE 300203:
	java.util.zip.Inflater.reset(Inflater.java:Unknown line)
	java.util.zip.Inflater.reset(Inflater.java:346)
	java.util.zip.ZipFile.releaseInflater(ZipFile.java:456)
	java.util.zip.ZipFile.access$100(ZipFile.java:56)
TRACE 300204:
	sun.misc.Unsafe.getObject(Unsafe.java:Unknown line)
	java.util.concurrent.ConcurrentHashMap.putIfAbsent(ConcurrentHashMap.java:1081)
	java.lang.ClassLoader.getClassLoadingLock(ClassLoader.java:462)
	java.lang.ClassLoader.loadClass(ClassLoader.java:403)
TRACE 300205:
	java.util.zip.Inflater.inflateBytes(Inflater.java:Unknown line)
	java.util.zip.Inflater.inflate(Inflater.java:256)
	java.util.zip.InflaterInputStream.read(InflaterInputStream.java:152)
	sun.misc.Resource.getBytes(Resource.java:124)
TRACE 300206:
	org.h2.store.PageStore.getPage(PageStore.java:817)
	org.h2.index.PageBtreeIndex.getPage(PageBtreeIndex.java:156)
	org.h2.index.PageBtreeIndex.<init>(PageBtreeIndex.java:68)
	org.h2.table.RegularTable.addIndex(RegularTable.java:223)
TRACE 300212:
	org.h2.engine.Database.checkWritingAllowed(Database.java:1707)
	org.h2.store.PageStore.update(PageStore.java:1049)
	org.h2.store.PageFreeList.allocate(PageFreeList.java:98)
	org.h2.store.PageStore.allocatePage(PageStore.java:1154)
TRACE 300214:
	org.h2.table.RegularTable.addIndex(RegularTable.java:233)
	org.h2.engine.Database.open(Database.java:619)
	org.h2.engine.Database.openDatabase(Database.java:222)
	org.h2.engine.Database.<init>(Database.java:217)
TRACE 300216:
	org.h2.engine.Database.initMetaTables(Database.java:727)
	org.h2.engine.Database.findSchema(Database.java:939)
	org.h2.command.Parser.getSchema(Parser.java:605)
	org.h2.command.Parser.getSchema(Parser.java:620)
TRACE 300217:
	java.lang.String.toCharArray(String.java:2801)
	java.util.zip.ZipCoder.getBytes(ZipCoder.java:78)
	java.util.zip.ZipFile.getInputStream(ZipFile.java:349)
	java.util.jar.JarFile.getInputStream(JarFile.java:403)
TRACE 300218:
	org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:264)
	org.h2.store.LobStorage.init(LobStorage.java:100)
	org.h2.engine.Database.open(Database.java:656)
	org.h2.engine.Database.openDatabase(Database.java:222)
TRACE 300219:
	org.h2.command.Parser.readFunction(Parser.java:2168)
	org.h2.command.Parser.readTerm(Parser.java:2476)
	org.h2.command.Parser.readFactor(Parser.java:2046)
	org.h2.command.Parser.readSum(Parser.java:2033)
TRACE 300220:
	org.h2.command.Parser.prepareCommand(Parser.java:219)
	org.h2.engine.Session.prepareLocal(Session.java:415)
	org.h2.engine.Session.prepareCommand(Session.java:364)
	org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1109)
TRACE 300221:
	org.h2.engine.DatabaseCloser.<init>(DatabaseCloser.java:27)
	org.h2.engine.Database.openDatabase(Database.java:225)
	org.h2.engine.Database.<init>(Database.java:217)
	org.h2.engine.Engine.openSession(Engine.java:56)
TRACE 300227:
	org.h2.engine.Session.containsUncommitted(Session.java:746)
	org.h2.engine.Session.commit(Session.java:447)
	org.h2.command.Command.stop(Command.java:148)
	org.h2.command.Command.executeQuery(Command.java:203)
TRACE 300252:
	org.h2.message.DbException.getJdbcSQLException(DbException.java:329)
	org.h2.message.DbException.get(DbException.java:169)
	org.h2.message.DbException.get(DbException.java:146)
	org.h2.message.DbException.getSyntaxError(DbException.java:181)
TRACE 300270:
	java.text.DontCareFieldPosition.<init>(DontCareFieldPosition.java:37)
	java.text.DontCareFieldPosition.<clinit>(DontCareFieldPosition.java:35)
	java.text.DateFormat.format(DateFormat.java:336)
	org.h2.message.TraceSystem.format(TraceSystem.java:227)
TRACE 300317:
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
	java.net.URLClassLoader$3.next(URLClassLoader.java:580)
	java.net.URLClassLoader$3.hasMoreElements(URLClassLoader.java:605)
	sun.misc.CompoundEnumeration.next(CompoundEnumeration.java:45)
TRACE 300342:
	com.sun.imageio.plugins.jpeg.JPEGImageReader.initReaderIDs(JPEGImageReader.java:Unknown line)
	com.sun.imageio.plugins.jpeg.JPEGImageReader.<clinit>(JPEGImageReader.java:91)
	com.sun.imageio.plugins.jpeg.JPEGImageReaderSpi.createReaderInstance(JPEGImageReaderSpi.java:85)
	javax.imageio.spi.ImageReaderSpi.createReaderInstance(ImageReaderSpi.java:320)
TRACE 300381:
	sun.awt.image.ByteInterleavedRaster.putByteData(ByteInterleavedRaster.java:800)
	sun.awt.image.ByteInterleavedRaster.setDataElements(ByteInterleavedRaster.java:675)
	sun.awt.image.ByteInterleavedRaster.setDataElements(ByteInterleavedRaster.java:648)
	sun.awt.image.ByteInterleavedRaster.setRect(ByteInterleavedRaster.java:1180)
TRACE 300383:
	sun.awt.image.ByteInterleavedRaster.putByteData(ByteInterleavedRaster.java:800)
	sun.awt.image.ByteInterleavedRaster.setDataElements(ByteInterleavedRaster.java:675)
	sun.awt.image.ByteInterleavedRaster.setDataElements(ByteInterleavedRaster.java:648)
	sun.awt.image.ByteInterleavedRaster.setRect(ByteInterleavedRaster.java:1180)
TRACE 300384:
	sun.awt.image.ByteInterleavedRaster.putByteData(ByteInterleavedRaster.java:802)
	sun.awt.image.ByteInterleavedRaster.setDataElements(ByteInterleavedRaster.java:675)
	sun.awt.image.ByteInterleavedRaster.setDataElements(ByteInterleavedRaster.java:648)
	sun.awt.image.ByteInterleavedRaster.setRect(ByteInterleavedRaster.java:1180)
TRACE 300393:
	sun.awt.X11GraphicsEnvironment.initDisplay(X11GraphicsEnvironment.java:Unknown line)
	sun.awt.X11GraphicsEnvironment.access$200(X11GraphicsEnvironment.java:65)
	sun.awt.X11GraphicsEnvironment$1.run(X11GraphicsEnvironment.java:110)
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
TRACE 300432:
	java.lang.Class.forName0(Class.java:Unknown line)
	java.lang.Class.forName(Class.java:186)
	sun.java2d.pipe.RenderingEngine$1.run(RenderingEngine.java:128)
	java.security.AccessController.doPrivileged(AccessController.java:Unknown line)
TRACE 300472:
	sun.java2d.SunGraphics2D.<clinit>(SunGraphics2D.java:358)
	sun.java2d.loops.GraphicsPrimitiveMgr.initIDs(GraphicsPrimitiveMgr.java:Unknown line)
	sun.java2d.loops.GraphicsPrimitiveMgr.<clinit>(GraphicsPrimitiveMgr.java:56)
	sun.java2d.loops.DrawLine.locate(DrawLine.java:55)
TRACE 300487:
	java.lang.Object.hashCode(Object.java:Unknown line)
	java.util.HashMap.put(HashMap.java:389)
	java.util.HashSet.add(HashSet.java:217)
	java.util.AbstractCollection.addAll(AbstractCollection.java:334)
TRACE 300514:
	sun.security.provider.MD5.HH(MD5.java:132)
	sun.security.provider.MD5.implCompress(MD5.java:192)
	sun.security.provider.DigestBase.engineUpdate(DigestBase.java:139)
	java.security.MessageDigest$Delegate.engineUpdate(MessageDigest.java:568)
TRACE 300517:
	sun.misc.Unsafe.getInt(Unsafe.java:Unknown line)
	sun.security.provider.ByteArrayAccess.b2iLittle64(ByteArrayAccess.java:143)
	sun.security.provider.MD5.implCompress(MD5.java:146)
	sun.security.provider.DigestBase.engineUpdate(DigestBase.java:139)
TRACE 300518:
	fr.thumbnailsdb.ThumbnailGenerator.generateMD5(ThumbnailGenerator.java:81)
	fr.thumbnailsdb.ThumbnailGenerator.generateImageDescriptor(ThumbnailGenerator.java:124)
	fr.thumbnailsdb.ThumbnailGenerator.generateAndSave(ThumbnailGenerator.java:139)
	fr.thumbnailsdb.ThumbnailGenerator.process(ThumbnailGenerator.java:171)
TRACE 300519:
	sun.security.provider.MD5.implCompress(MD5.java:200)
	sun.security.provider.DigestBase.engineUpdate(DigestBase.java:139)
	java.security.MessageDigest$Delegate.engineUpdate(MessageDigest.java:568)
	java.security.MessageDigest.update(MessageDigest.java:313)
TRACE 300520:
	sun.security.provider.MD5.implCompress(MD5.java:169)
	sun.security.provider.DigestBase.engineUpdate(DigestBase.java:139)
	java.security.MessageDigest$Delegate.engineUpdate(MessageDigest.java:568)
	java.security.MessageDigest.update(MessageDigest.java:313)
TRACE 300521:
	java.lang.System.arraycopy(System.java:Unknown line)
	java.io.BufferedOutputStream.write(BufferedOutputStream.java:128)
	java.io.PrintStream.write(PrintStream.java:480)
	sun.nio.cs.StreamEncoder.writeBytes(StreamEncoder.java:221)
TRACE 300522:
	sun.awt.image.ByteInterleavedRaster.setDataElements(ByteInterleavedRaster.java:606)
	sun.awt.image.ByteInterleavedRaster.setRect(ByteInterleavedRaster.java:1180)
	com.sun.imageio.plugins.jpeg.JPEGImageReader.acceptPixels(JPEGImageReader.java:1192)
	com.sun.imageio.plugins.jpeg.JPEGImageReader.readImage(JPEGImageReader.java:Unknown line)
TRACE 300523:
	java.security.MessageDigest.update(MessageDigest.java:314)
	fr.thumbnailsdb.ThumbnailGenerator.generateMD5(ThumbnailGenerator.java:79)
	fr.thumbnailsdb.ThumbnailGenerator.generateImageDescriptor(ThumbnailGenerator.java:124)
	fr.thumbnailsdb.ThumbnailGenerator.generateAndSave(ThumbnailGenerator.java:139)
TRACE 300524:
	java.io.FileInputStream.read(FileInputStream.java:220)
	fr.thumbnailsdb.ThumbnailGenerator.generateMD5(ThumbnailGenerator.java:77)
	fr.thumbnailsdb.ThumbnailGenerator.generateImageDescriptor(ThumbnailGenerator.java:124)
	fr.thumbnailsdb.ThumbnailGenerator.generateAndSave(ThumbnailGenerator.java:139)
TRACE 300528:
	java.util.ArrayList.get(ArrayList.java:382)
	org.h2.table.TableFilter.removeUnusableIndexConditions(TableFilter.java:707)
	org.h2.table.Plan.removeUnusableIndexConditions(Plan.java:92)
	org.h2.command.dml.Optimizer.optimize(Optimizer.java:231)
TRACE 300530:
	java.lang.Long.valueOf(Long.java:574)
	javax.imageio.stream.ImageInputStreamImpl.mark(ImageInputStreamImpl.java:781)
	javax.imageio.ImageIO$CanDecodeInputFilter.filter(ImageIO.java:565)
	javax.imageio.spi.FilterIterator.advance(ServiceRegistry.java:810)
TRACE 300531:
	java.util.zip.CRC32.updateBytes(CRC32.java:Unknown line)
	java.util.zip.CRC32.update(CRC32.java:65)
	org.h2.store.PageStore.writeVariableHeader(PageStore.java:956)
	org.h2.store.PageStore.setLogFirstPage(PageStore.java:941)
TRACE 300532:
	java.util.ArrayList.rangeCheck(ArrayList.java:603)
	java.util.ArrayList.get(ArrayList.java:382)
	org.h2.store.PageStore.getFreeList(PageStore.java:1073)
	org.h2.store.PageStore.getFreeListForPage(PageStore.java:1067)
TRACE 300533:
	com.sun.imageio.plugins.jpeg.JPEGImageReader.acceptPixels(JPEGImageReader.java:1194)
	com.sun.imageio.plugins.jpeg.JPEGImageReader.readImage(JPEGImageReader.java:Unknown line)
	com.sun.imageio.plugins.jpeg.JPEGImageReader.readInternal(JPEGImageReader.java:1158)
	com.sun.imageio.plugins.jpeg.JPEGImageReader.read(JPEGImageReader.java:966)
CPU SAMPLES BEGIN (total = 233) Thu Sep  6 18:20:48 2012
rank   self  accum   count trace method
   1 43.35% 43.35%     101 300382 com.sun.imageio.plugins.jpeg.JPEGImageReader.readImage
   2 17.60% 60.94%      41 300213 java.io.FileDescriptor.sync
   3  7.30% 68.24%      17 300387 sun.awt.image.SunWritableRaster.markDirty
   4  2.15% 70.39%       5 300388 sun.awt.image.ByteInterleavedRaster.getByteData
   5  1.29% 71.67%       3 300057 java.lang.ClassLoader.defineClass1
   6  1.29% 72.96%       3 300515 java.io.FileInputStream.readBytes
   7  1.29% 74.25%       3 300516 sun.misc.Unsafe.getInt
   8  0.86% 75.11%       2 300093 sun.misc.Unsafe.putOrderedObject
   9  0.86% 75.97%       2 300372 java.awt.image.DataBufferByte.<init>
  10  0.86% 76.82%       2 300385 java.lang.System.arraycopy
  11  0.43% 77.25%       1 300036 sun.misc.URLClassPath$3.run
  12  0.43% 77.68%       1 300058 java.lang.ClassLoader.findBootstrapClass
  13  0.43% 78.11%       1 300060 java.lang.String.charAt
  14  0.43% 78.54%       1 300083 java.lang.String.hashCode
  15  0.43% 78.97%       1 300088 java.util.zip.ZipFile.read
  16  0.43% 79.40%       1 300089 java.util.Arrays.copyOf
  17  0.43% 79.83%       1 300094 java.lang.Object.<init>
  18  0.43% 80.26%       1 300095 org.h2.engine.Engine.openSession
  19  0.43% 80.69%       1 300114 java.util.Properties$LineReader.readLine
  20  0.43% 81.12%       1 300129 java.security.Provider$Service.getImplClass
  21  0.43% 81.55%       1 300151 sun.nio.fs.UnixFileSystem.<init>
  22  0.43% 81.97%       1 300190 sun.util.resources.TimeZoneNames.getContents
  23  0.43% 82.40%       1 300196 org.h2.engine.Database.getPageStore
  24  0.43% 82.83%       1 300200 org.h2.store.PageStore.openExisting
  25  0.43% 83.26%       1 300201 org.h2.table.Column.<init>
  26  0.43% 83.69%       1 300202 org.h2.value.ValueInt.<clinit>
  27  0.43% 84.12%       1 300203 java.util.zip.Inflater.reset
  28  0.43% 84.55%       1 300204 sun.misc.Unsafe.getObject
  29  0.43% 84.98%       1 300205 java.util.zip.Inflater.inflateBytes
  30  0.43% 85.41%       1 300206 org.h2.store.PageStore.getPage
  31  0.43% 85.84%       1 300212 org.h2.engine.Database.checkWritingAllowed
  32  0.43% 86.27%       1 300214 org.h2.table.RegularTable.addIndex
  33  0.43% 86.70%       1 300216 org.h2.engine.Database.initMetaTables
  34  0.43% 87.12%       1 300217 java.lang.String.toCharArray
  35  0.43% 87.55%       1 300218 org.h2.jdbc.JdbcConnection.prepareStatement
  36  0.43% 87.98%       1 300219 org.h2.command.Parser.readFunction
  37  0.43% 88.41%       1 300220 org.h2.command.Parser.prepareCommand
  38  0.43% 88.84%       1 300221 org.h2.engine.DatabaseCloser.<init>
  39  0.43% 89.27%       1 300227 org.h2.engine.Session.containsUncommitted
  40  0.43% 89.70%       1 300252 org.h2.message.DbException.getJdbcSQLException
  41  0.43% 90.13%       1 300270 java.text.DontCareFieldPosition.<init>
  42  0.43% 90.56%       1 300317 java.security.AccessController.doPrivileged
  43  0.43% 90.99%       1 300342 com.sun.imageio.plugins.jpeg.JPEGImageReader.initReaderIDs
  44  0.43% 91.42%       1 300381 sun.awt.image.ByteInterleavedRaster.putByteData
  45  0.43% 91.85%       1 300383 sun.awt.image.ByteInterleavedRaster.putByteData
  46  0.43% 92.27%       1 300384 sun.awt.image.ByteInterleavedRaster.putByteData
  47  0.43% 92.70%       1 300393 sun.awt.X11GraphicsEnvironment.initDisplay
  48  0.43% 93.13%       1 300432 java.lang.Class.forName0
  49  0.43% 93.56%       1 300472 sun.java2d.SunGraphics2D.<clinit>
  50  0.43% 93.99%       1 300487 java.lang.Object.hashCode
  51  0.43% 94.42%       1 300514 sun.security.provider.MD5.HH
  52  0.43% 94.85%       1 300517 sun.misc.Unsafe.getInt
  53  0.43% 95.28%       1 300518 fr.thumbnailsdb.ThumbnailGenerator.generateMD5
  54  0.43% 95.71%       1 300519 sun.security.provider.MD5.implCompress
  55  0.43% 96.14%       1 300520 sun.security.provider.MD5.implCompress
  56  0.43% 96.57%       1 300521 java.lang.System.arraycopy
  57  0.43% 97.00%       1 300522 sun.awt.image.ByteInterleavedRaster.setDataElements
  58  0.43% 97.42%       1 300523 java.security.MessageDigest.update
  59  0.43% 97.85%       1 300524 java.io.FileInputStream.read
  60  0.43% 98.28%       1 300528 java.util.ArrayList.get
  61  0.43% 98.71%       1 300530 java.lang.Long.valueOf
  62  0.43% 99.14%       1 300531 java.util.zip.CRC32.updateBytes
  63  0.43% 99.57%       1 300532 java.util.ArrayList.rangeCheck
  64  0.43% 100.00%       1 300533 com.sun.imageio.plugins.jpeg.JPEGImageReader.acceptPixels
CPU SAMPLES END
